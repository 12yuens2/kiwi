<?xml version="1.0" encoding="UTF-8"?>
<project name="kiwi-reader" default="do-deploy" basedir="."
		xmlns:fx="javafx:com.sun.javafx.tools.ant"
		xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<property name="launch4j.dir" location="C:\Program Files (x86)\Launch4j" />
	<property name="innosetup.dir" location="C:\Program Files (x86)\Inno Setup 5"/>
	
	<path id="maven-ant-tasks.classpath" path="maven-ant-tasks-2.1.3.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml"
		uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />

	<taskdef name="launch4j"
	    classname="net.sf.launch4j.ant.Launch4jTask"
	    classpath="${launch4j.dir}/launch4j.jar
	        :${launch4j.dir}/lib/xstream.jar" />

	<target name="maven-retrieve">
		<artifact:pom file="pom.xml" id="maven.project"/>
		<artifact:dependencies fileSetId="maven-ant-tasks.dependency.fileset" type="jar">
			<pom refid="maven.project"/>
		</artifact:dependencies>
	</target>

	<target name="init-fx-tasks">
		<echo message="Java home is set to ${java.home}">
		</echo>

		<path id="fxant">
			<filelist>
				<file name="${java.home}\..\lib\ant-javafx.jar"/>
				<file name="${java.home}\lib\ant-javafx.jar"/>
				<file name="${java.home}\lib\jfxrt.jar"/>
				<file name="${java.home}\lib\ext\jfxrt.jar"/>
				<file name="${basedir}"/>
			</filelist>
		</path>

		<taskdef resource="com/sun/javafx/tools/ant/antlib.xml"
			uri="javafx:com.sun.javafx.tools.ant"
			classpathref="fxant"/>
	</target>
	<target name="setup-staging-area" depends="maven-retrieve">
		<delete dir="externalLibs" />
		<delete dir="project" />
		<delete dir="projectRefs" />

		<mkdir dir="externalLibs" />

		<!-- Copy Maven dependencies -->
		<copy todir="externalLibs">
			<fileset refid="maven-ant-tasks.dependency.fileset"/>
			<mapper type="flatten" />
		</copy>

		<mkdir dir="project" />
		<copy todir="project">
			<fileset dir="${basedir}">
				<include name="src/**" />
			</fileset>
		</copy>

		<mkdir dir="projectRefs" />
	</target>
	<target name='do-compile'>

		<delete dir="build" />
		<mkdir dir="build/src" />
		<mkdir dir="build/libs" />
		<mkdir dir="build/classes" />

		<!-- Copy project-libs references -->
		<copy todir="build/libs">
			<fileset dir="externalLibs">
				<include name="*.jar"/>
			</fileset>
		</copy>

		<!-- Copy project references -->

		<!-- Copy project sources itself -->
		<copy todir="build/src">
			<fileset dir="project/src">
				<include name="**/*"/>
			</fileset>
		</copy>

		<javac includeantruntime="false" source="1.8" target="1.8" srcdir="build/src" destdir="build/classes" encoding="Cp1252">
			<classpath>
				<fileset dir="build/libs">
					<include name="*"/>
				</fileset>
			</classpath>
		</javac>

		<!-- Copy over none Java-Files -->
		<copy todir="build/classes">
			<fileset dir="project/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>


	</target>
	<target name="do-deploy" depends="setup-staging-area, do-compile, init-fx-tasks">
		<delete file="dist"/>
		<delete file="deploy" />

		<mkdir dir="dist" />

		<jar destfile="dist/kiwi.jar">
			<zipgroupfileset dir="externalLibs" includes="*.jar"/>
			<fileset dir="build/classes">
				<exclude name=".class" />
			</fileset>
	        <manifest>
	        <attribute name="Main-Class" value="com.proxy.kiwi.app.Kiwi"/>
	        </manifest>
		</jar>
		
		<launch4j 
			configFile="./launch4j.config.xml" 
			outfile="dist/kiwi.exe"
			jar="dist/kiwi.jar"/>
		

		<exec dir="." executable="${innosetup.dir}/Compil32.exe">
			<arg line="/cc 'kiwi.iss'" /> 
		</exec> 

		<antcall target="clean-up">
		</antcall>

	</target>

	<target name="clean-up">
		<delete dir="deploy" failonerror="false" />
		<delete dir="project" failonerror="false" />
		<delete dir="projectRefs" failonerror="false" />
		<delete dir="build" failonerror="false" />
		<delete dir="externalLibs" failonerror="false" />

	</target>

	<target name="clean">
		<antcall target="clean-up" />
		<delete dir="dist" failonerror="false" />
	</target>

</project>
